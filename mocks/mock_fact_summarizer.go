// Code generated by MockGen. DO NOT EDIT.
// Source: fact_summarizer.go
//
// Generated by this command:
//
//	mockgen -source=fact_summarizer.go -destination=../mocks/mock_fact_summarizer.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockFactSummarizer is a mock of FactSummarizer interface.
type MockFactSummarizer struct {
	ctrl     *gomock.Controller
	recorder *MockFactSummarizerMockRecorder
	isgomock struct{}
}

// MockFactSummarizerMockRecorder is the mock recorder for MockFactSummarizer.
type MockFactSummarizerMockRecorder struct {
	mock *MockFactSummarizer
}

// NewMockFactSummarizer creates a new mock instance.
func NewMockFactSummarizer(ctrl *gomock.Controller) *MockFactSummarizer {
	mock := &MockFactSummarizer{ctrl: ctrl}
	mock.recorder = &MockFactSummarizerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFactSummarizer) EXPECT() *MockFactSummarizerMockRecorder {
	return m.recorder
}

// Summarizer mocks base method.
func (m *MockFactSummarizer) Summarizer(ctx context.Context, facts map[string]string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Summarizer", ctx, facts)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Summarizer indicates an expected call of Summarizer.
func (mr *MockFactSummarizerMockRecorder) Summarizer(ctx, facts any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Summarizer", reflect.TypeOf((*MockFactSummarizer)(nil).Summarizer), ctx, facts)
}
